!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BinaryZationPPM	51033_H4.h	/^int BinaryZationPPM(struct IMG * img,int val);$/;"	p	signature:(struct IMG * img,int val)
BinaryZationPPM	51033_H4_Fun.c	/^int BinaryZationPPM(struct IMG * img,int val)$/;"	f	signature:(struct IMG * img,int val)
BitPlane	51033_H4.h	/^int BitPlane(struct IMG * img,char * str,int bit);$/;"	p	signature:(struct IMG * img,char * str,int bit)
BitPlane	51033_H4_Fun.c	/^int BitPlane(struct IMG * img,char * str,int bit)$/;"	f	signature:(struct IMG * img,char * str,int bit)
ComponentPPM	51033_H4.h	/^int ComponentPPM(char * fname,struct IMG * img);$/;"	p	signature:(char * fname,struct IMG * img)
ComponentPPM	51033_H4_Fun.c	/^int ComponentPPM(char * fname,struct IMG * img)$/;"	f	signature:(char * fname,struct IMG * img)
Convolution	51033_H4.h	/^int Convolution(struct IMG * img,struct Template * temple);$/;"	p	signature:(struct IMG * img,struct Template * temple)
Convolution	51033_H4_Fun.c	/^int Convolution(struct IMG * img,struct Template * ptml)$/;"	f	signature:(struct IMG * img,struct Template * ptml)
CopyPPM	51033_H4.h	/^int CopyPPM(struct IMG * from, struct IMG * to);$/;"	p	signature:(struct IMG * from, struct IMG * to)
CopyPPM	51033_H4_Fun.c	/^int CopyPPM(struct IMG * from,struct IMG * to)$/;"	f	signature:(struct IMG * from,struct IMG * to)
H2	51033_H4_Main.c	/^int H2()$/;"	f
H2	51033_H4_Main.c	/^int H2();$/;"	p	file:
H3	51033_H4_Main.c	/^int H3()$/;"	f
H3	51033_H4_Main.c	/^int H3();$/;"	p	file:
H3_1	51033_H4_Main.c	/^int H3_1()$/;"	f
H3_1	51033_H4_Main.c	/^int H3_1();$/;"	p	file:
H3_2	51033_H4_Main.c	/^int H3_2()$/;"	f
H3_2	51033_H4_Main.c	/^int H3_2();$/;"	p	file:
H3_3	51033_H4_Main.c	/^int H3_3()$/;"	f
H4	51033_H4_Main.c	/^int H4()$/;"	f
H4	51033_H4_Main.c	/^int H4();$/;"	p	file:
H5	51033_H4_Main.c	/^int H5()$/;"	f
H5	51033_H4_Main.c	/^int H5();$/;"	p	file:
HistEqualization	51033_H4.h	/^int HistEqualization(struct IMG * img,int * hist);$/;"	p	signature:(struct IMG * img,int * hist)
HistEqualization	51033_H4_Fun.c	/^int HistEqualization(struct IMG * img,int * hist)$/;"	f	signature:(struct IMG * img,int * hist)
HistPPM	51033_H4.h	/^int HistPPM(int * hist,struct IMG * img);$/;"	p	signature:(int * hist,struct IMG * img)
HistPPM	51033_H4_Fun.c	/^int HistPPM(int * hist,struct IMG * img)$/;"	f	signature:(int * hist,struct IMG * img)
IMG	51033_H4.h	/^struct IMG$/;"	s
IMG::ch	51033_H4.h	/^    char ch;$/;"	m	struct:IMG	access:public
IMG::channel	51033_H4.h	/^    int channel;$/;"	m	struct:IMG	access:public
IMG::img	51033_H4.h	/^    unsigned char * img;$/;"	m	struct:IMG	access:public
IMG::maxv	51033_H4.h	/^    int maxv;$/;"	m	struct:IMG	access:public
IMG::sx	51033_H4.h	/^    int sx,sy;$/;"	m	struct:IMG	access:public
IMG::sy	51033_H4.h	/^    int sx,sy;$/;"	m	struct:IMG	access:public
MapPPM	51033_H4.h	/^int MapPPM(int * arrmap,struct IMG * img);$/;"	p	signature:(int * arrmap,struct IMG * img)
MapPPM	51033_H4_Fun.c	/^int MapPPM(int * arrmap,struct IMG * img)$/;"	f	signature:(int * arrmap,struct IMG * img)
NegativePPM	51033_H4.h	/^int NegativePPM(struct IMG * img);$/;"	p	signature:(struct IMG * img)
NegativePPM	51033_H4_Fun.c	/^int NegativePPM(struct IMG * img)$/;"	f	signature:(struct IMG * img)
ReadPPM	51033_H4.h	/^int ReadPPM(char * fname,struct IMG * img);$/;"	p	signature:(char * fname,struct IMG * img)
ReadPPM	51033_H4_Fun.c	/^int ReadPPM(char * fname,struct IMG * img)$/;"	f	signature:(char * fname,struct IMG * img)
Sqrt_MapPPM	51033_H4.h	/^int Sqrt_MapPPM(int * arrmap,int maxv);$/;"	p	signature:(int * arrmap,int maxv)
Sqrt_MapPPM	51033_H4_Fun.c	/^int Sqrt_MapPPM(int * arrmap,int maxv)$/;"	f	signature:(int * arrmap,int maxv)
Square_MapPPM	51033_H4.h	/^int Square_MapPPM(int * arrmap,int maxv);$/;"	p	signature:(int * arrmap,int maxv)
Square_MapPPM	51033_H4_Fun.c	/^int Square_MapPPM(int * arrmap,int maxv)$/;"	f	signature:(int * arrmap,int maxv)
Template	51033_H4.h	/^struct Template$/;"	s
Template::max	51033_H4.h	/^    int max;\/\/表示该模版可能存在max倍的灰度值，所以可能要出去$/;"	m	struct:Template	access:public
Template::name	51033_H4.h	/^    char * name;\/\/用于保存该模版的名字，附加作用$/;"	m	struct:Template	access:public
Template::square	51033_H4.h	/^    int * square;\/\/模版方框的数据$/;"	m	struct:Template	access:public
Template::x	51033_H4.h	/^    int x;$/;"	m	struct:Template	access:public
Template::y	51033_H4.h	/^    int y;$/;"	m	struct:Template	access:public
TemplateFun	51033_H4_Fun.c	/^int TemplateFun(struct Template * ptml,int * array,int x,int y,char * name)$/;"	f	signature:(struct Template * ptml,int * array,int x,int y,char * name)
WriteHist	51033_H4.h	/^int WriteHist(int * hist,char * fname,struct IMG * img);$/;"	p	signature:(int * hist,char * fname,struct IMG * img)
WriteHist	51033_H4_Fun.c	/^int WriteHist(int * hist,char * fname,struct IMG * img)$/;"	f	signature:(int * hist,char * fname,struct IMG * img)
WritePPM	51033_H4.h	/^int WritePPM(char * fname,struct IMG * img);$/;"	p	signature:(char * fname,struct IMG * img)
WritePPM	51033_H4_Fun.c	/^int WritePPM(char * fname,struct IMG * img)$/;"	f	signature:(char * fname,struct IMG * img)
ch	51033_H4.h	/^    char ch;$/;"	m	struct:IMG	access:public
channel	51033_H4.h	/^    int channel;$/;"	m	struct:IMG	access:public
file_name_len	51033_H4.h	21;"	d
img	51033_H4.h	/^    unsigned char * img;$/;"	m	struct:IMG	access:public
main	51033_H4_Main.c	/^int main()$/;"	f
max	51033_H4.h	/^    int max;\/\/表示该模版可能存在max倍的灰度值，所以可能要出去$/;"	m	struct:Template	access:public
maxv	51033_H4.h	/^    int maxv;$/;"	m	struct:IMG	access:public
name	51033_H4.h	/^    char * name;\/\/用于保存该模版的名字，附加作用$/;"	m	struct:Template	access:public
square	51033_H4.h	/^    int * square;\/\/模版方框的数据$/;"	m	struct:Template	access:public
str_info_len	51033_H4.h	22;"	d
sx	51033_H4.h	/^    int sx,sy;$/;"	m	struct:IMG	access:public
sy	51033_H4.h	/^    int sx,sy;$/;"	m	struct:IMG	access:public
unBitPlane	51033_H4.h	/^int unBitPlane(struct IMG * img,char * str,int bit);$/;"	p	signature:(struct IMG * img,char * str,int bit)
unBitPlane	51033_H4_Fun.c	/^int unBitPlane(struct IMG * img,char * str,int bit)$/;"	f	signature:(struct IMG * img,char * str,int bit)
x	51033_H4.h	/^    int x;$/;"	m	struct:Template	access:public
y	51033_H4.h	/^    int y;$/;"	m	struct:Template	access:public
